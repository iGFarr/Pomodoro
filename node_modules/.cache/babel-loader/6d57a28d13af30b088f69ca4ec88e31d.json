{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isaac\\\\thinkful\\\\reactStuff\\\\pomodoro\\\\src\\\\pomodoro\\\\ProgressBar.js\";\nimport React, { useState } from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\nimport classNames from \"../utils/class-names\";\n\nfunction ProgressBar({\n  focusDurationInMinutes,\n  breakDurationInMinutes,\n  initialFocusDuration,\n  initialBreakDuration,\n  session\n}) {\n  if (session) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, session === null || session === void 0 ? void 0 : session.label, \" for \", (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? focusDurationInMinutes : breakDurationInMinutes, \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? 100 - (session === null || session === void 0 ? void 0 : session.timeRemaining) / initialFocusDuration * 100 : 100 - (session === null || session === void 0 ? void 0 : session.timeRemaining) / initialBreakDuration * 100 // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: `${(session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? 100 - (session === null || session === void 0 ? void 0 : session.timeRemaining) / initialFocusDuration * 100 : 100 - (session === null || session === void 0 ? void 0 : session.timeRemaining) / initialBreakDuration * 100}%`\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    })))));\n  } else return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/isaac/thinkful/reactStuff/pomodoro/src/pomodoro/ProgressBar.js"],"names":["React","useState","secondsToDuration","minutesToDuration","classNames","ProgressBar","focusDurationInMinutes","breakDurationInMinutes","initialFocusDuration","initialBreakDuration","session","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,SAASC,WAAT,CAAsB;AAACC,EAAAA,sBAAD;AAAyBC,EAAAA,sBAAzB;AAAiDC,EAAAA,oBAAjD;AAAuEC,EAAAA,oBAAvE;AAA6FC,EAAAA;AAA7F,CAAtB,EAA4H;AAC1H,MAAGA,OAAH,EAAW;AACX,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEC,KADZ,WACwB,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,KAAT,MAAmB,UAAnB,GAAgCL,sBAAhC,GAAyDC,sBADjF,aAFF,eAME;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,iBAAiB,CAACQ,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEE,aAAV,CADpB,eANF,CADF,CAFF,eAcE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAe,CAAAH,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,KAAT,MAAmB,UAAnB,GAAgC,MAAM,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,aAAT,IAAuBJ,oBAAvB,GAA4C,GAAlF,GAAyF,MAAM,CAAAE,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,aAAT,IAAuBH,oBAAvB,GAA4C,GAL5J,CAKkK;AALlK;AAME,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAG,GAAE,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,KAAT,MAAmB,UAAnB,GAAgC,MAAM,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,aAAT,IAAuBJ,oBAAvB,GAA4C,GAAlF,GAAyF,MAAM,CAAAE,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,aAAT,IAAuBH,oBAAvB,GAA4C,GAAK;AAA5J,OANT,CAM0K;AAN1K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAdF,CADJ;AA8BI,GA/BJ,MAgCO,oBAAO,yCAAP;AACR;;AAED,eAAeJ,WAAf","sourcesContent":["import React, {useState} from \"react\"\r\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\r\nimport classNames from \"../utils/class-names\";\r\n\r\nfunction ProgressBar ({focusDurationInMinutes, breakDurationInMinutes, initialFocusDuration, initialBreakDuration, session}){\r\n  if(session){\r\n  return (\r\n      <div>\r\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n            <h2 data-testid=\"session-title\">\r\n              {session?.label} for {session?.label === \"Focusing\" ? focusDurationInMinutes : breakDurationInMinutes} minutes\r\n            </h2>\r\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {secondsToDuration(session?.timeRemaining)} remaining\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={session?.label === \"Focusing\" ? 100 -(session?.timeRemaining/initialFocusDuration*100) : 100 -(session?.timeRemaining/initialBreakDuration*100)} // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: `${session?.label === \"Focusing\" ? 100 -(session?.timeRemaining/initialFocusDuration*100) : 100 -(session?.timeRemaining/initialBreakDuration*100)}%`}} // TODO: Increase width % as elapsed time increases\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n    else return <></> \r\n}\r\n   \r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}